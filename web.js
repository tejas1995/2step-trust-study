(()=>{"use strict";var i={d:(t,n)=>{for(var o in n)i.o(n,o)&&!i.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},o:(i,t)=>Object.prototype.hasOwnProperty.call(i,t)};i.d({},{o:()=>n});let t="https://tejassrinivasan.pythonanywhere.com/";var n=!1,o=[];let e,c,a,_,r,d,s=-1,l=null,u=-1,b=-1,p=-1,f=-1,v=0,h=1,m=0,g=0;function A(i,t){if(!i)throw t||"Assertion failed"}function w(i){m+=i,0==m?$("#button_instructions_prev").attr("disabled","true"):$("#button_instructions_prev").removeAttr("disabled"),m>=6?($("#instructions_and_decorations").show(),$("#button_instructions_next").val("Start study")):($("#instructions_and_decorations").hide(),$("#button_instructions_next").val("Next")),7==m&&($("#main_box_instructions").hide(),$("#main_box_experiment").show(),O()),$("#main_box_instructions").children(":not(input)").each(((i,t)=>{$(t).hide()})),$(`#instructions_${m}`).show()}function y(i){r=Date.now(),u=i,A(1==i||2==i,"Invalid option!"),1==i?($("#button_initial_decision_option1").attr("activedecision","true"),$("#button_initial_decision_option2").removeAttr("activedecision")):($("#button_initial_decision_option1").removeAttr("activedecision"),$("#button_initial_decision_option2").attr("activedecision","true")),$("#initial_user_confidence_div").show(),$("#button_initial_decision_option1").attr("disabled","true"),$("#button_initial_decision_option2").attr("disabled","true"),$("#button_initial_confidence_option1").removeAttr("disabled"),$("#button_initial_confidence_option2").removeAttr("disabled"),$("#button_initial_confidence_option3").removeAttr("disabled")}function x(i){a=Date.now(),p=i,A(1==i||2==i||3==i,"Invalid option!"),1==i?($("#button_initial_confidence_option1").attr("activedecision","true"),$("#button_initial_confidence_option2").removeAttr("activedecision"),$("#button_initial_confidence_option3").removeAttr("activedecision")):2==i?($("#button_initial_confidence_option1").removeAttr("activedecision"),$("#button_initial_confidence_option2").attr("activedecision","true"),$("#button_initial_confidence_option3").removeAttr("activedecision")):($("#button_initial_confidence_option1").removeAttr("activedecision"),$("#button_initial_confidence_option2").removeAttr("activedecision"),$("#button_initial_confidence_option3").attr("activedecision","true")),$("#ai_assistance_div").show(),$("#final_user_decision_div").show(),$("#button_initial_confidence_option1").attr("disabled","true"),$("#button_initial_confidence_option2").attr("disabled","true"),$("#button_initial_confidence_option3").attr("disabled","true"),$("#button_final_decision_option1").removeAttr("disabled"),$("#button_final_decision_option2").removeAttr("disabled")}function k(i){d=Date.now(),b=i,A(1==i||2==i,"Invalid option!"),1==i?($("#button_final_decision_option1").attr("activedecision","true"),$("#button_final_decision_option2").removeAttr("activedecision")):($("#button_final_decision_option1").removeAttr("activedecision"),$("#button_final_decision_option2").attr("activedecision","true")),$("#final_user_confidence_div").show(),$("#button_final_decision_option1").attr("disabled","true"),$("#button_final_decision_option2").attr("disabled","true"),$("#button_final_confidence_option1").removeAttr("disabled"),$("#button_final_confidence_option2").removeAttr("disabled"),$("#button_final_confidence_option3").removeAttr("disabled")}function T(i){_=Date.now(),f=i,A(1==i||2==i||3==i,"Invalid option!"),1==i?($("#button_final_confidence_option1").attr("activedecision","true"),$("#button_final_confidence_option2").removeAttr("activedecision"),$("#button_final_confidence_option3").removeAttr("activedecision")):2==i?($("#button_final_confidence_option1").removeAttr("activedecision"),$("#button_final_confidence_option2").attr("activedecision","true"),$("#button_final_confidence_option3").removeAttr("activedecision")):($("#button_final_confidence_option1").removeAttr("activedecision"),$("#button_final_confidence_option2").removeAttr("activedecision"),$("#button_final_confidence_option3").attr("activedecision","true")),$("#button_final_confidence_option1").attr("disabled","true"),$("#button_final_confidence_option2").attr("disabled","true"),$("#button_final_confidence_option3").attr("disabled","true"),function(){let i=l.correct_option,t=i==b,n=l.ai_is_correct,o="Correct answer: <b>Option "+i+"</b>.<br>";o+=t?"You picked Option "+b+", which was <span class='color_correct'><b>correct</b></span>.<br>":"You picked Option "+b+", which was <span class='color_incorrect'><b>incorrect</b></span>.<br>",o+=n?"The AI picked Option "+l.ai_prediction+", which was <span class='color_correct'><b>correct<b></span>.<br>":"The AI picked Option "+l.ai_prediction+", which was <span class='color_incorrect'><b>incorrect</b></span>.<br>",t?(o+="<span class='color_correct'><b>You receive a reward of $0.10.</b></span>",v+=.1):o+="<span class='color_incorrect'><b>You do not receive any reward.</b></span>",o+="<br>",$("#balance").text(`Balance: $${v.toFixed(2)} + $1.0`),$("#result_span").html(o),$("#result_span").show(),$("#how_confident_div").show()}()}function O(){if($("#button_initial_decision_option1").removeAttr("activedecision"),$("#button_initial_decision_option2").removeAttr("activedecision"),$("#button_initial_decision_option1").removeAttr("disabled"),$("#button_initial_decision_option2").removeAttr("disabled"),$("#button_initial_confidence_option1").removeAttr("activedecision"),$("#button_initial_confidence_option2").removeAttr("activedecision"),$("#button_initial_confidence_option3").removeAttr("activedecision"),$("#button_initial_confidence_option1").removeAttr("disabled"),$("#button_initial_confidence_option2").removeAttr("disabled"),$("#button_initial_confidence_option3").removeAttr("disabled"),$("#button_final_decision_option1").removeAttr("activedecision"),$("#button_final_decision_option2").removeAttr("activedecision"),$("#button_final_decision_option1").removeAttr("disabled"),$("#button_final_decision_option2").removeAttr("disabled"),$("#button_final_confidence_option1").removeAttr("activedecision"),$("#button_final_confidence_option2").removeAttr("activedecision"),$("#button_final_confidence_option3").removeAttr("activedecision"),$("#button_final_confidence_option1").removeAttr("disabled"),$("#button_final_confidence_option2").removeAttr("disabled"),$("#button_final_confidence_option3").removeAttr("disabled"),$("#ai_assistance_div").hide(),$("#initial_user_confidence_div").hide(),$("#final_user_decision_div").hide(),$("#final_user_confidence_div").hide(),$("#range_val").removeAttr("disabled"),$("#how_confident_div").hide(),$("#button_place_bet").hide(),$("#button_next").hide(),$("#result_span").hide(),-1==s?$("#range_text").text("-"):$("#range_text").text(`Before this interaction, your trust in the AI: ${10*e} / 100.`),$("#range_val").val(e),s+=1,s>=o.length)return $("#main_box_experiment").hide(),void(n?$("#main_box_end_mock").show():$("#main_box_end").show());if(l=o[s],$("#question_span").html(l.question),$("#option1_span").html(l.option1),$("#option2_span").html(l.option2),$("#ai_prediction_span").html("Option "+l.ai_prediction),$("#ai_confidence_span").html(l.ai_confidence),l.hasOwnProperty("reward_ratio")){let[i,t]=l.reward_ratio;i=Number(i),t=Number(t),h=i/t}else h=1;c=Date.now(),$("#progress").text(`Progress: ${s+1} / ${o.length}`)}$("#button_instructions_next").on("click",(()=>w(1))),$("#button_instructions_prev").on("click",(()=>w(-1))),$("#button_next").on("click",(()=>{if(-1!=s){let i={question_i:s,user_balance_post_interaction:v,user_trust_val:e,initial_user_decision:u,final_user_decision:b,initial_user_confidence:p,final_user_confidence:f};i.times={initial_decision:r-c,initial_confidence:a-r,final_decision:d-a,final_confidence:_-d,trust_decision:Date.now()-_},i.question=l,i.count_exited_page=g,async function(i){if(n)console.log("logged (mock)",i);else{i.url_data=globalThis.url_data,console.log("Data"),"study_id"in i.url_data||(i.url_data.study_id="trialrun_studies"),i.url_data.queue_id=globalThis.uid,console.log("logged",i),console.log("Logging to",t+"log");try{return await $.ajax(t+"log",{data:JSON.stringify({project:"2step-trust-study/"+i.url_data.study_id,uid:globalThis.uid+"_"+i.url_data.prolific_id,payload:JSON.stringify(i)}),type:"POST",contentType:"application/json"})}catch(i){console.log(i)}}}(i),g=0}O()})),$("#range_val").on("input change",(function(){e=$(this).val(),$("#range_text").text(`After this interaction, your current trust in the AI: ${10*e} / 100.`),$("#button_next").show()})),$("#button_initial_decision_option1").on("click",(()=>y(1))),$("#button_initial_decision_option2").on("click",(()=>y(2))),$("#button_initial_confidence_option1").on("click",(()=>x(1))),$("#button_initial_confidence_option2").on("click",(()=>x(2))),$("#button_initial_confidence_option3").on("click",(()=>x(3))),$("#button_final_decision_option1").on("click",(()=>k(1))),$("#button_final_decision_option2").on("click",(()=>k(2))),$("#button_final_confidence_option1").on("click",(()=>T(1))),$("#button_final_confidence_option2").on("click",(()=>T(2))),$("#button_final_confidence_option3").on("click",(()=>T(3)));const I=new URLSearchParams(window.location.search),D=I.get("start"),S=I.get("uid");if(globalThis.url_data=function(i){const t={};for(const[n,o]of i)t[n]=o;return t}(I.entries()),null!=S){if(globalThis.uid=S,"prolific_random"==globalThis.uid){let i=`${Math.floor(10*Math.random())}`.padStart(3,"0");globalThis.uid=`${I.get("prolific_queue_name")}_${i}`}}else{let i=null;for(;null==i;)i=prompt("Enter your user id. Please get in touch if you were not assigned an id but wish to participate in this experiment.");globalThis.uid=i}globalThis.uid.startsWith("demo_paper")&&(n=!0),console.log("Running with UID",globalThis.uid),async function(){return await $.getJSON(`baked_queues/${globalThis.uid}.json?t=${Date.now()}`)}().catch((i=>{console.log("Invalid user id."),console.log(globalThis.uid),window.location.reload()})).then((i=>{o=i,null!=D&&(s=parseInt(D)-1,console.log("Starting from",s)),w(0),$("#main_box_instructions").show(),$("#instructions_and_decorations").hide()})),console.log("Starting session with UID:",globalThis.uid);let P=!1;document.onvisibilitychange=()=>{P||(g+=1,P=!0,globalThis.uid.startsWith("demo")||alert("Please don't leave the page. If you do so again, we may restrict paying you."),P=!1)}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,